# config/common - common options for live-build(7)
{% set pget = salt['pillar.get'] %}
{% macro get(imgname, key, default) %}
{{- pget('livebuild:images:%s:%s' % (imgname, key), default) -}}
{% endmacro %}

# $LB_APT: set package manager
# (Default: apt)
LB_APT="{{- get(imgname, 'apt', 'apt') -}}"

# $LB_APT_FTP_PROXY: set apt/aptitude ftp proxy
# (Default: autodetected or empty)
LB_APT_FTP_PROXY="{{- get(imgname, 'apt_ftp_proxy', '') -}}"

# $LB_APT_HTTP_PROXY: set apt/aptitude http proxy
# (Default: autodetected or empty)
LB_APT_HTTP_PROXY="{{- get(imgname, 'apt_http_proxy', '') -}}"

# $LB_APT_PIPELINE: set apt/aptitude pipeline depth
# (Default: )
LB_APT_PIPELINE="{{- get(imgname, 'apt_pipeline', '') -}}"

# $LB_APT_RECOMMENDS: set apt/aptitude recommends
# (Default: true)
LB_APT_RECOMMENDS="{{- get(imgname, 'apt_recommends', 'true') -}}"

# $LB_APT_SECURE: set apt/aptitude security
# (Default: true)
LB_APT_SECURE="{{- get(imgname, 'apt_secure', 'true') -}}"

# $LB_APT_SOURCE_ARCHIVES: set apt/aptitude source entries in sources.list
# (Default: true)
LB_APT_SOURCE_ARCHIVES="{{- get(imgname, 'apt_source_archives', 'true') -}}"

# $LB_BOOTSTRAP: set bootstrap program
# (Default: debootstrap)
LB_BOOTSTRAP="{{- get(imgname, 'bootstrap', 'debootstrap') -}}"

# $LB_CACHE: control cache
# (Default: true)
LB_CACHE="{{- get(imgname, 'cache', 'true') -}}"

# $LB_CACHE_INDICES: control if downloaded package indices should be cached
# (Default: false)
LB_CACHE_INDICES="{{- get(imgname, 'cache_indices', 'false') -}}"

# $LB_CACHE_PACKAGES: control if downloaded packages files should be cached
# (Default: true)
LB_CACHE_PACKAGES="{{- get(imgname, 'cache_packages', 'true') -}}"

# $LB_CACHE_STAGES: control if completed stages should be cached
# (Default: bootstrap)
LB_CACHE_STAGES="{{- get(imgname, 'cache_stages', 'bootstrap') -}}"

# $LB_DEBCONF_FRONTEND: set debconf(1) frontend to use
# (Default: noninteractive)
LB_DEBCONF_FRONTEND="{{- get(imgname, 'debconf_frontend', 'noninteractive') -}}"

# $LB_DEBCONF_PRIORITY: set debconf(1) priority to use
# (Default: critical)
LB_DEBCONF_PRIORITY="{{- get(imgname, 'debconf_priority', 'critical') -}}"

# $LB_INITRAMFS: set initramfs hook
# (Default: live-boot)
LB_INITRAMFS="{{- get(imgname, 'initramfs', 'live-boot') -}}"

# $LB_INITRAMFS_COMPRESSION: set initramfs compression
# (Default: gzip)
LB_INITRAMFS_COMPRESSION="{{- get(imgname, 'initramfs_compression', 'gzip') -}}"

# $LB_INITSYSTEM: set init system
# (Default: sysvinit)
LB_INITSYSTEM="{{- get(imgname, 'initsystem', 'sysvinit') -}}"

# $LB_FDISK: set fdisk program
# (Default: autodetected)
LB_FDISK="{{- get(imgname, 'fdisk', 'fdisk') -}}"

# $LB_LOSETUP: set losetup program
# (Default: autodetected)
LB_LOSETUP="{{- get(imgname, 'losetup', 'losetup') -}}"

# $LB_MODE: set distribution mode
# (Default: debian)
LB_MODE="{{- get(imgname, 'mode', 'debian') -}}"

# $LB_SYSTEM: set system type
# (Default: live)
LB_SYSTEM="{{- get(imgname, 'system', 'live') -}}"

# $LB_TASKSEL: set tasksel program
# (Default: apt)
LB_TASKSEL="{{- get(imgname, 'tasksel', 'apt') -}}"

# $LB_TEMPLATES: set templates
# (Default: /usr/share/live/build/templates)
LB_TEMPLATES="{{- get(imgname, 'templates', '/usr/share/live/build/templates') -}}"

# live-build options

# $_BREAKPOINTS: enable breakpoints
# (Default: false)
#_BREAKPOINTS="{{- get(imgname, '_breakpoints', 'false') -}}"

# $_DEBUG: enable debug
# (Default: false)
#_DEBUG="{{- get(imgname, '_debug', 'false') -}}"

# $_COLOR: enable color
# (Default: false)
#_COLOR="{{- get(imgname, '_color', 'false') -}}"

# $_FORCE: enable force
# (Default: false)
#_FORCE="{{- get(imgname, '_force', 'false') -}}"

# $_QUIET: enable quiet
# (Default: false)
_QUIET="{{- get(imgname, '_quiet', 'false') -}}"

# $_VERBOSE: enable verbose
# (Default: false)
#_VERBOSE="{{- get(imgname, '_verbose', 'false') -}}"

# Internal stuff (FIXME)
APT_OPTIONS="{{- get(imgname, 'apt_options', '--yes') -}}"
APTITUDE_OPTIONS="{{- get(imgname, 'aptitude_options', '--assume-yes') -}}"
DEBOOTSTRAP_OPTIONS="{{- get(imgname, 'debootstrap_options', '') -}}"
CDEBOOTSTRAP_OPTIONS="{{- get(imgname, 'cdebootstrap_options', '') -}}"
GZIP_OPTIONS="{{- get(imgname, 'gzip_options', '-6 --rsyncable') -}}"
ISOHYBRID_OPTIONS="{{- get(imgname, 'isohybrid_options', '') -}}"
